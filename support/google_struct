NET|Generic Device|1|{
   "id":"dev['net_mac']",
   "type":"action.devices.types.SWITCH",
   "traits":[
      "action.devices.traits.OnOff"
   ],
   "name":{
      "defaultNames":[
         "Generic Device"
      ],
      "name":"dev['net_code']",
      "nicknames":[

      ]
   },
   "willReportState":true,
   "deviceInfo":{
      "manufacturer":"MSH",
      "model":"1",
      "hwVersion":"1.0",
      "swVersion":"1.0"
   },
   "customData":{
      "mshType":"dev['net_type']"
   }
}|{
   "requestId":"data['requestId']",
   "payload":{
      "devices":{
         "data['inputs'][0]['payload']['devices'][0]['id']":{
            "on":"cmd_ping(dev['net_ip'])['result']",
            "online":"cmd_ping(dev['net_ip'])['result']"
         }
      }
   }
}|{
   "on":"{'output': 'OK'}"
}|{
   "requestId":"data['requestId']",
   "payload":{
      "commands":[
         {
            "ids":[
               "data['inputs'][0]['payload']['commands'][0]['devices'][0]['id']"
            ],
            "status":"SUCCESS",
            "states":{
               "on":"cmd_ping(dev['net_ip'])['result']",
               "online":"cmd_ping(dev['net_ip'])['result']"
            }
         }
      ]
   }
}|{
   "requestId":"data['requestId']",
   "payload":{
      "commands":[
         {
            "ids":[
               "data['inputs'][0]['payload']['commands'][0]['devices'][0]['id']"
            ],
            "status":"ERROR",
            "errorCode":"result['output']"
         }
      ]
   }
}
PCWIN|PC Windows|2|{
   "id":"dev['net_mac']",
   "type":"action.devices.types.SWITCH",
   "traits":[
      "action.devices.traits.OnOff"
   ],
   "name":{
      "defaultNames":[
         "PC Windows"
      ],
      "name":"dev['net_code']",
      "nicknames":[

      ]
   },
   "willReportState":true,
   "deviceInfo":{
      "manufacturer":"MSH",
      "model":"1",
      "hwVersion":"1.0",
      "swVersion":"1.0"
   },
   "customData":{
      "mshType":"dev['net_type']"
   }
}|{
   "requestId":"data['requestId']",
   "payload":{
      "devices":{
         "data['inputs'][0]['payload']['devices'][0]['id']":{
            "on":"cmd_ping(dev['net_ip'])['result']",
            "online":"cmd_ping(dev['net_ip'])['result'])"
         }
      }
   }
}|{
   "on":"cmd_pcwin('on', dev['net_mac'], dev['net_ip'], dev['net_usr'], dev['net_psw']) if parametri['on'] == 'ON' else cmd_pcwin('off', dev['net_mac'], dev['net_ip'], dev['net_usr'], dev['net_psw'])"
}|{
   "requestId":"data['requestId']",
   "payload":{
      "commands":[
         {
            "ids":[
               "data['inputs'][0]['payload']['commands'][0]['devices'][0]['id']"
            ],
            "status":"SUCCESS",
            "states":{
               "on":"cmd_ping(dev['net_ip'])['result']",
               "online":"cmd_ping(dev['net_ip'])['result']"
            }
         }
      ]
   }
}|{
   "requestId":"data['requestId']",
   "payload":{
      "commands":[
         {
            "ids":[
               "data['inputs'][0]['payload']['commands'][0]['devices'][0]['id']"
            ],
            "status":"ERROR",
            "errorCode":"result['output']"
         }
      ]
   }
}
AP|Access Point UNIX based SSH Compatible|3|{
   "id":"dev['net_mac']",
   "type":"action.devices.types.SWITCH",
   "traits":[
      "action.devices.traits.OnOff"
   ],
   "name":{
      "defaultNames":[
         "Access Point UNIX based SSH Compatible"
      ],
      "name":"dev['net_code']",
      "nicknames":[

      ]
   },
   "willReportState":true,
   "deviceInfo":{
      "manufacturer":"MSH",
      "model":"1",
      "hwVersion":"1.0",
      "swVersion":"1.0"
   },
   "customData":{
      "mshType":"dev['net_type']"
   }
}|{
   "requestId":"data['requestId']",
   "payload":{
      "devices":{
         "data['inputs'][0]['payload']['devices'][0]['id']":{
            "on":"cmd_radio(dev['net_ip'], 'stato', dev['net_usr'], dev['net_psw'])['result']",
            "online":"cmd_ping(dev['net_ip'])['result']"
         }
      }
   }
}|{
   "on":"cmd_radio(dev['net_ip'], 'up', dev['net_usr'], dev['net_psw']) if parametri['on'] == 'ON' else cmd_radio(dev['net_ip'], 'down', dev['net_usr'], dev['net_psw']))"
}|{
   "requestId":"data['requestId']",
   "payload":{
      "commands":[
         {
            "ids":[
               "data['inputs'][0]['payload']['commands'][0]['devices'][0]['id']"
            ],
            "status":"SUCCESS",
            "states":{
               "on":"cmd_radio(dev['net_ip'], 'stato', dev['net_usr'], dev['net_psw'])['result']",
               "online":"cmd_ping(dev['net_ip'])['result']"
            }
         }
      ]
   }
}|{
   "requestId":"data['requestId']",
   "payload":{
      "commands":[
         {
            "ids":[
               "data['inputs'][0]['payload']['commands'][0]['devices'][0]['id']"
            ],
            "status":"ERROR",
            "errorCode":"result['output']"
         }
      ]
   }
}
ESP_RELE|ESP8266 con software per rele|4|{
   "id":"dev['net_mac']",
   "type":"action.devices.types.SWITCH",
   "traits":[
      "action.devices.traits.OnOff"
   ],
   "name":{
      "defaultNames":[
         "ESP8266 con software per rele"
      ],
      "name":"dev['net_code']",
      "nicknames":[

      ]
   },
   "willReportState":true,
   "deviceInfo":{
      "manufacturer":"MSH",
      "model":"1",
      "hwVersion":"1.0",
      "swVersion":"1.0"
   },
   "customData":{
      "mshType":"dev['net_type']"
   }
}|{
   "requestId":"data['requestId']",
   "payload":{
      "devices":{
         "data['inputs'][0]['payload']['devices'][0]['id']":{
            "on":"cmd_esp(dev['net_ip'], 'stato')['result']",
            "online":"cmd_ping(dev['net_ip'])['result']"
         }
      }
   }
}|{
   "on":"cmd_esp(dev['net_ip'], 'toggle')"
}|{
   "requestId":"data['requestId']",
   "payload":{
      "commands":[
         {
            "ids":[
               "data['inputs'][0]['payload']['commands'][0]['devices'][0]['id']"
            ],
            "status":"SUCCESS",
            "states":{
               "on": "cmd_esp(dev['net_ip'], 'stato')['result']",
                           "online": "cmd_ping(dev['net_ip'])['result']"
            }
         }
      ]
   }
}|{
   "requestId":"data['requestId']",
   "payload":{
      "commands":[
         {
            "ids":[
               "data['inputs'][0]['payload']['commands'][0]['devices'][0]['id']"
            ],
            "status":"ERROR",
            "errorCode":"result['output']"
         }
      ]
   }
}
ESP_TEMP|ESP8266 con software per temperatura|4|{
   "id":"dev['net_mac']",
   "type":"action.devices.types.THERMOSTAT",
   "traits":[
      "action.devices.traits.TemperatureSetting"
   ],
   "name":{
      "defaultNames":[
         "ESP8266 con software per temperatura"
      ],
      "name":"dev['net_code']",
      "nicknames":[

      ]
   },
   "willReportState":true,
   "attributes": {
                  "availableThermostatModes": "heat",
                  "queryOnlyTemperatureSetting": true,
          "thermostatTemperatureUnit": "C"
        },
   "deviceInfo":{
      "manufacturer":"MSH",
      "model":"1",
      "hwVersion":"1.0",
      "swVersion":"1.0"
   },
   "customData":{
      "mshType":"dev['net_type']"
   }
}|{
   "requestId":"data['requestId']",
   "payload":{
      "devices":{
        "data['inputs'][0]['payload']['devices'][0]['id']":{
                        "thermostatMode": "heat",
                        "thermostatTemperatureSetpoint": 23,
            "online":"cmd_ping(dev['net_ip'])['result']",
                        "thermostatTemperatureAmbient": "float(cmd_esp(dev['net_ip'], 'read_dht')['result'].split('C;')[0][:-1])",
                        "thermostatHumidityAmbient": "float(cmd_esp(dev['net_ip'], 'read_dht')['result'].split('C;')[1].replace('%', ''))"
        }
      }
   }
}|{
   "temperature":"{'output': 'OK'}"
}|{
   "requestId":"data['requestId']",
   "payload":{
      "commands":[
         {
            "ids":[
               "data['inputs'][0]['payload']['commands'][0]['devices'][0]['id']"
            ],
            "status":"SUCCESS",
            "states":{
                                "thermostatMode": "heat",
                                "thermostatTemperatureSetpoint": 23,
                                "online":"cmd_ping(dev['net_ip'])['result']",
                                "thermostatTemperatureAmbient": "float(cmd_esp(dev['net_ip'], 'read_dht')['result'].split('C;')[0][:-1])",
                                "thermostatHumidityAmbient": "float(cmd_esp(dev['net_ip'], 'read_dht')['result'].split('C;')[1].replace('%', ''))"
            }
         }
      ]
   }
}|{
   "requestId":"data['requestId']",
   "payload":{
      "commands":[
         {
            "ids":[
               "data['inputs'][0]['payload']['commands'][0]['devices'][0]['id']"
            ],
            "status":"ERROR",
            "errorCode":"result['output']"
         }
      ]
   }
}


PS4|Sony Playstation 4|5|{
   "id":"dev['net_mac']",
   "type":"action.devices.types.SWITCH",
   "traits":[
      "action.devices.traits.OnOff"
   ],
   "name":{
      "defaultNames":[
         "Sony Playstation 4"
      ],
      "name":"dev['net_code']",
      "nicknames":[

      ]
   },
   "willReportState":true,
   "deviceInfo":{
      "manufacturer":"MSH",
      "model":"1",
      "hwVersion":"1.0",
      "swVersion":"1.0"
   },
   "customData":{
      "mshType":"dev['net_type']"
   }
}|{
   "requestId":"data['requestId']",
   "payload":{
      "devices":{
         "data['inputs'][0]['payload']['devices'][0]['id']":{
            "on":"cmd_ping(dev['net_ip'])['result']",
            "online":"cmd_ping(dev['net_ip'])['result']"
         }
      }
   }
}|{
   "on":"{'output': 'OK'}"
}|{
   "requestId":"data['requestId']",
   "payload":{
      "commands":[
         {
            "ids":[
               "data['inputs'][0]['payload']['commands'][0]['devices'][0]['id']"
            ],
            "status":"SUCCESS",
            "states":{
               "on":"cmd_ping(dev['net_ip'])['result']",
               "online":"cmd_ping(dev['net_ip'])['result']"
            }
         }
      ]
   }
}|{
   "requestId":"data['requestId']",
   "payload":{
      "commands":[
         {
            "ids":[
               "data['inputs'][0]['payload']['commands'][0]['devices'][0]['id']"
            ],
            "status":"ERROR",
            "errorCode":"result['output']"
         }
      ]
   }
}
